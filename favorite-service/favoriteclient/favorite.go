// Code generated by goctl. DO NOT EDIT.
// Source: favorite.proto

package favoriteclient

import (
	"context"

	"go-zeroTiktok/favorite-service/pb/favorite"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CancelFavoriteReq  = favorite.CancelFavoriteReq
	CancelFavoriteResp = favorite.CancelFavoriteResp
	CreateFavoriteReq  = favorite.CreateFavoriteReq
	CreateFavoriteResp = favorite.CreateFavoriteResp
	FavoriteList       = favorite.FavoriteList
	FavoriteListResp   = favorite.FavoriteListResp
	User               = favorite.User
	Video              = favorite.Video

	Favorite interface {
		CreateFavorite(ctx context.Context, in *CreateFavoriteReq, opts ...grpc.CallOption) (*CreateFavoriteResp, error)
		CancelFavorite(ctx context.Context, in *CancelFavoriteReq, opts ...grpc.CallOption) (*CancelFavoriteResp, error)
		GetFavoriteList(ctx context.Context, in *FavoriteList, opts ...grpc.CallOption) (*FavoriteListResp, error)
	}

	defaultFavorite struct {
		cli zrpc.Client
	}
)

func NewFavorite(cli zrpc.Client) Favorite {
	return &defaultFavorite{
		cli: cli,
	}
}

func (m *defaultFavorite) CreateFavorite(ctx context.Context, in *CreateFavoriteReq, opts ...grpc.CallOption) (*CreateFavoriteResp, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.CreateFavorite(ctx, in, opts...)
}

func (m *defaultFavorite) CancelFavorite(ctx context.Context, in *CancelFavoriteReq, opts ...grpc.CallOption) (*CancelFavoriteResp, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.CancelFavorite(ctx, in, opts...)
}

func (m *defaultFavorite) GetFavoriteList(ctx context.Context, in *FavoriteList, opts ...grpc.CallOption) (*FavoriteListResp, error) {
	client := favorite.NewFavoriteClient(m.cli.Conn())
	return client.GetFavoriteList(ctx, in, opts...)
}
