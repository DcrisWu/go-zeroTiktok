syntax = "v1"

info(
	title: "用户系统 user-api"
	desc: "用户系统 user-api"
	author: "dcris"
)

type (
	RegisterReq {
		UserName string `json:"username"` // 用户名
		Password string `json:"password"` // 密码
	}

	RegisterResp {
		StatusCode int8   `json:"status_code"` // 状态码 0-成功 1-失败
		StatusMsg  string `json:"status_msg"`  // 状态信息
		UserId     int64  `json:"user_id"`     // 用户id
		Token      string `json:"token"`       // token
	}

	LoginReq {
		UserName string `json:"username"` // 用户名
		Password string `json:"password"` // 密码
	}

	LoginResp {
		StatusCode int8   `json:"status_code"` // 状态码 0-成功 1-失败
		StatusMsg  string `json:"status_msg"`  // 状态信息
		UserId     int64  `json:"user_id"`     // 用户id
		Token      string `json:"token"`       // token
	}

	User {
		Id            int64  `json:"id"`             // 用户id
		Name          string `json:"name"`           // 用户名
		FollowCount   int64  `json:"follow_count"`   // 关注数
		FollowerCount int64  `json:"follower_count"` // 粉丝数
		IsFollow      bool   `json:"is_follow"`      // 是否关注
	}

	UserReq {
		UserId int64 `json:"user_id"` // 用户id
	}

	UserResp {
		StatusCode int8   `json:"status_code"` // 状态码 0-成功 1-失败
		StatusMsg  string `json:"status_msg"`  // 状态信息
		User       User   `json:"user"`        // 用户信息
	}
)

service user-api {
	@doc "用户注册"
	@handler register
	post /tiktok/user/register (RegisterReq) returns (RegisterResp)
	
	@doc "用户登录"
	@handler login
	post /tiktok/user/login (LoginReq) returns (LoginResp)
}

@server(
	middleware: Auth
)
service user-api {
	@doc "获取用户信息"
	@handler user
	post /tiktok/user (UserReq) returns (UserResp)
}