// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relationclient

import (
	"context"

	"go-zeroTiktok/relation-service/pb/relation"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionReq        = relation.ActionReq
	ActionResp       = relation.ActionResp
	FollowListReq    = relation.FollowListReq
	FollowListResp   = relation.FollowListResp
	FollowerListReq  = relation.FollowerListReq
	FollowerListResp = relation.FollowerListResp
	User             = relation.User

	Relation interface {
		Action(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionResp, error)
		FollowList(ctx context.Context, in *FollowListReq, opts ...grpc.CallOption) (*FollowListResp, error)
		FollowerList(ctx context.Context, in *FollowerListReq, opts ...grpc.CallOption) (*FollowerListResp, error)
	}

	defaultRelation struct {
		cli zrpc.Client
	}
)

func NewRelation(cli zrpc.Client) Relation {
	return &defaultRelation{
		cli: cli,
	}
}

func (m *defaultRelation) Action(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionResp, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}

func (m *defaultRelation) FollowList(ctx context.Context, in *FollowListReq, opts ...grpc.CallOption) (*FollowListResp, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.FollowList(ctx, in, opts...)
}

func (m *defaultRelation) FollowerList(ctx context.Context, in *FollowerListReq, opts ...grpc.CallOption) (*FollowerListResp, error) {
	client := relation.NewRelationClient(m.cli.Conn())
	return client.FollowerList(ctx, in, opts...)
}
