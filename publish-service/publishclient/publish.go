// Code generated by goctl. DO NOT EDIT.
// Source: publish.proto

package publishclient

import (
	"context"

	"go-zeroTiktok/publish-service/pb/publish"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionReq  = publish.ActionReq
	ActionResp = publish.ActionResp
	ListReq    = publish.ListReq
	ListResp   = publish.ListResp
	User       = publish.User
	Video      = publish.Video

	Publish interface {
		Action(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionResp, error)
		List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	}

	defaultPublish struct {
		cli zrpc.Client
	}
)

func NewPublish(cli zrpc.Client) Publish {
	return &defaultPublish{
		cli: cli,
	}
}

func (m *defaultPublish) Action(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionResp, error) {
	client := publish.NewPublishClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}

func (m *defaultPublish) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := publish.NewPublishClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}
